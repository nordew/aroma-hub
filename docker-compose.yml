version: "3.9"

services:
  # ─────────────────────────────────────────
  # Your Application
  # ─────────────────────────────────────────
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aroma-server
    restart: unless-stopped
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    environment:
      - SERVER_HOST=0.0.0.0
      - POSTGRES_DSN=${POSTGRES_DSN}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}        # e.g. http://minio:9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_USE_SSL=${MINIO_USE_SSL}          # true if certs are configured
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ─────────────────────────────────────────
  # PostgreSQL
  # ─────────────────────────────────────────
  postgres:
    image: postgres:17.4-alpine
    container_name: aroma-hub-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ─────────────────────────────────────────
  # MinIO Object Storage
  # ─────────────────────────────────────────
  minio:
    image: minio/minio:latest
    container_name: aroma-minio
    restart: unless-stopped
    # expose both data API and console ports
    ports:
      - "9000:9000"   # S3-compatible API
      - "9001:9001"   # Web console
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    # for TLS, mount certs under /root/.minio/certs/CAs and public.crt/private.key
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
      # If you have TLS certs:
      # - ./certs/public.crt:/root/.minio/certs/public.crt:ro
      # - ./certs/private.key:/root/.minio/certs/private.key:ro
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      postgres:
        condition: service_started

# ─────────────────────────────────────────
networks:
  aroma-hub-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local
  minio-config:
    driver: local

