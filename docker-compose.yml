version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aroma-server
    restart: unless-stopped
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    environment:
      - SERVER_HOST=0.0.0.0
      - POSTGRES_DSN=${POSTGRES_DSN}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:17.4-alpine
    container_name: aroma-hub-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  minio:
    image: minio/minio:latest
    container_name: aroma-hub-minio
    restart: unless-stopped
    ports:
      - "${MINIO_PORT}:9000"
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data
    volumes:
      - minio-data:/data
      # To enable erasure coding (redundancy), you can declare multiple volumes:
      # - minio-data1:/data1
      # - minio-data2:/data2
      # - minio-data3:/data3
      # - minio-data4:/data4
      # and adjust command: server /data1 /data2 /data3 /data4
    networks:
      - aroma-hub-network
    deploy:
      resources:
        limits:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  aroma-hub-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local
  # Uncomment these and remove `minio-data` above to add erasure-coded drives:
  # minio-data1:
  #   driver: local
  # minio-data2:
  #   driver: local
  # minio-data3:
  #   driver: local
  # minio-data4:
  #   driver: local
