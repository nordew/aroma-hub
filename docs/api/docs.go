// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Get a list of categories with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aroma-hub_internal_models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get a list of products with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "categoryName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Brand name",
                        "name": "brand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum price",
                        "name": "priceFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum price",
                        "name": "priceTo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum stock amount",
                        "name": "stockAmountFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum stock amount",
                        "name": "stockAmountTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aroma-hub_internal_models.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new product to the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Product information",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aroma-hub_internal_application_dto.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "delete": {
                "description": "Remove a product from the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errx.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aroma-hub_internal_application_dto.CreateProductRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "characteristics": {
                    "type": "string"
                },
                "composition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stockAmount": {
                    "type": "integer"
                }
            }
        },
        "aroma-hub_internal_models.Category": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "aroma-hub_internal_models.Product": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "characteristics": {
                    "type": "string"
                },
                "composition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stockAmount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "errx.Code": {
            "type": "string",
            "enum": [
                "CONFLICT",
                "INTERNAL",
                "NOT_FOUND",
                "BAD_REQUEST",
                "ALREADY_EXISTS",
                "UNAUTHORIZED",
                "FORBIDDEN",
                "TIMEOUT",
                "VALIDATION"
            ],
            "x-enum-comments": {
                "AlreadyExists": "Resource already exists",
                "BadRequest": "Invalid input or parameters",
                "Conflict": "Resource conflicts with existing data",
                "Forbidden": "Permission denied",
                "Internal": "Internal server or system errors",
                "NotFound": "Resource not found",
                "Timeout": "Operation timed out",
                "Unauthorized": "Authentication required",
                "Validation": "Input validation failed"
            },
            "x-enum-varnames": [
                "Conflict",
                "Internal",
                "NotFound",
                "BadRequest",
                "AlreadyExists",
                "Unauthorized",
                "Forbidden",
                "Timeout",
                "Validation"
            ]
        },
        "errx.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error classification code",
                    "allOf": [
                        {
                            "$ref": "#/definitions/errx.Code"
                        }
                    ]
                },
                "err": {
                    "description": "Original error (if any)"
                },
                "message": {
                    "description": "User-friendly error message",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Aroma-Hub API",
	Description:      "dAPI documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
